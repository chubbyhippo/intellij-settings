<templateSet group="javaMockito">
  <template name="spy" value="org.mockito.Mockito.spy($EXPR$)$END$" description="Mockito.spy" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="mock" value="org.mockito.Mockito.mock($END$)&#10;" description="Mockito.mock" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="any" value="org.mockito.Mockito.any()" description="Mockito.any" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_LANG_IO_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="mockStatic" value="org.mockito.Mockito.mockStatic($END$)" description="Mockito.mockStatic" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_LANG_IO_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="anyString" value="org.mockito.Mockito.anyString()" description="Mockito.anyString" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_LANG_IO_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="anyByte" value="org.mockito.Mockito.anyByte()" description="Mockito.anyByte" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_LANG_IO_STATEMENT" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>